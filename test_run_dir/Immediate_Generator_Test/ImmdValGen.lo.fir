circuit ImmdValGen :
  module ImmdValGen :
    input clock : Clock
    input reset : UInt<1>
    input io_instr : UInt<32>
    input io_PC : UInt<10>
    output io_immd_se : UInt<32>

    node _T = bits(io_instr, 6, 0) @[ImmediateGenerator.scala 15:19]
    node _T_1 = eq(_T, UInt<2>("h3")) @[ImmediateGenerator.scala 15:25]
    node _T_2 = bits(io_instr, 6, 0) @[ImmediateGenerator.scala 15:54]
    node _T_3 = eq(_T_2, UInt<4>("hf")) @[ImmediateGenerator.scala 15:60]
    node _T_4 = or(_T_1, _T_3) @[ImmediateGenerator.scala 15:42]
    node _T_5 = bits(io_instr, 6, 0) @[ImmediateGenerator.scala 15:89]
    node _T_6 = eq(_T_5, UInt<5>("h13")) @[ImmediateGenerator.scala 15:95]
    node _T_7 = or(_T_4, _T_6) @[ImmediateGenerator.scala 15:77]
    node _T_8 = bits(io_instr, 6, 0) @[ImmediateGenerator.scala 15:124]
    node _T_9 = eq(_T_8, UInt<5>("h1b")) @[ImmediateGenerator.scala 15:130]
    node _T_10 = or(_T_7, _T_9) @[ImmediateGenerator.scala 15:112]
    node _T_11 = bits(io_instr, 6, 0) @[ImmediateGenerator.scala 15:159]
    node _T_12 = eq(_T_11, UInt<7>("h67")) @[ImmediateGenerator.scala 15:165]
    node _T_13 = or(_T_10, _T_12) @[ImmediateGenerator.scala 15:147]
    node _T_14 = bits(io_instr, 6, 0) @[ImmediateGenerator.scala 15:194]
    node _T_15 = eq(_T_14, UInt<7>("h73")) @[ImmediateGenerator.scala 15:200]
    node _T_16 = or(_T_13, _T_15) @[ImmediateGenerator.scala 15:182]
    node _io_immd_se_T = bits(io_instr, 31, 20) @[ImmediateGenerator.scala 16:37]
    node _io_immd_se_T_1 = or(UInt<1>("h0"), _io_immd_se_T) @[ImmediateGenerator.scala 16:27]
    node _T_17 = bits(io_instr, 6, 0) @[ImmediateGenerator.scala 20:25]
    node _T_18 = eq(_T_17, UInt<5>("h17")) @[ImmediateGenerator.scala 20:31]
    node _T_19 = bits(io_instr, 6, 0) @[ImmediateGenerator.scala 20:60]
    node _T_20 = eq(_T_19, UInt<6>("h37")) @[ImmediateGenerator.scala 20:66]
    node _T_21 = or(_T_18, _T_20) @[ImmediateGenerator.scala 20:48]
    node _io_immd_se_T_2 = bits(io_instr, 31, 12) @[ImmediateGenerator.scala 21:37]
    node _io_immd_se_T_3 = or(UInt<1>("h0"), _io_immd_se_T_2) @[ImmediateGenerator.scala 21:27]
    node _T_22 = bits(io_instr, 6, 0) @[ImmediateGenerator.scala 24:24]
    node _T_23 = eq(_T_22, UInt<7>("h6f")) @[ImmediateGenerator.scala 24:30]
    node _io_immd_se_T_4 = bits(io_instr, 31, 12) @[ImmediateGenerator.scala 25:46]
    node _io_immd_se_T_5 = or(UInt<1>("h0"), _io_immd_se_T_4) @[ImmediateGenerator.scala 25:36]
    node _io_immd_se_T_6 = add(io_PC, _io_immd_se_T_5) @[ImmediateGenerator.scala 25:29]
    node _io_immd_se_T_7 = tail(_io_immd_se_T_6, 1) @[ImmediateGenerator.scala 25:29]
    node _T_24 = bits(io_instr, 6, 0) @[ImmediateGenerator.scala 28:24]
    node _T_25 = eq(_T_24, UInt<6>("h23")) @[ImmediateGenerator.scala 28:30]
    node _io_immd_se_T_8 = bits(io_instr, 31, 25) @[ImmediateGenerator.scala 29:37]
    node _io_immd_se_T_9 = or(UInt<1>("h0"), _io_immd_se_T_8) @[ImmediateGenerator.scala 29:27]
    node _T_26 = bits(io_instr, 6, 0) @[ImmediateGenerator.scala 32:24]
    node _T_27 = eq(_T_26, UInt<7>("h63")) @[ImmediateGenerator.scala 32:30]
    node _io_immd_se_T_10 = bits(io_instr, 31, 25) @[ImmediateGenerator.scala 33:46]
    node _io_immd_se_T_11 = or(UInt<1>("h0"), _io_immd_se_T_10) @[ImmediateGenerator.scala 33:36]
    node _io_immd_se_T_12 = add(io_PC, _io_immd_se_T_11) @[ImmediateGenerator.scala 33:29]
    node _io_immd_se_T_13 = tail(_io_immd_se_T_12, 1) @[ImmediateGenerator.scala 33:29]
    node _GEN_0 = validif(_T_27, _io_immd_se_T_13) @[ImmediateGenerator.scala 32:46 ImmediateGenerator.scala 33:20]
    node _GEN_1 = mux(_T_25, _io_immd_se_T_9, _GEN_0) @[ImmediateGenerator.scala 28:46 ImmediateGenerator.scala 29:20]
    node _GEN_2 = mux(_T_23, _io_immd_se_T_7, _GEN_1) @[ImmediateGenerator.scala 24:46 ImmediateGenerator.scala 25:20]
    node _GEN_3 = mux(_T_21, _io_immd_se_T_3, _GEN_2) @[ImmediateGenerator.scala 20:84 ImmediateGenerator.scala 21:20]
    node _GEN_4 = mux(_T_16, _io_immd_se_T_1, _GEN_3) @[ImmediateGenerator.scala 15:217 ImmediateGenerator.scala 16:20]
    io_immd_se <= _GEN_4
